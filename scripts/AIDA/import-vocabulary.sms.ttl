@prefix : <http://onto.fel.cvut.cz/ontologies/ava/import-vocabulary-0.1/> .
@prefix apf: <http://jena.apache.org/ARQ/property#> .
@prefix ata: <http://onto.fel.cvut.cz/voc/ata-100/> .
@prefix av: <http://onto.fel.cvut.cz/ontologies/ava/> .
@prefix avd: <http://onto.fel.cvut.cz/ontologies/ava-data/> .
@prefix config: <http://onto.fel.cvut.cz/ontologies/ava/config/> .
@prefix csvw: <http://www.w3.org/ns/csvw#> .
@prefix kbss-csvw: <https://onto.fel.cvut.cz/ontologies/extension/csvw/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dl: <http://onto.fel.cvut.cz/ontologies/ava/data-lib/> .
@prefix ffa: <http://onto.fel.cvut.cz/ontologies/fta-fmea-application/> .
@prefix form: <http://onto.fel.cvut.cz/ontologies/form/> .
@prefix doc: <http://onto.fel.cvut.cz/ontologies/documentation/> .
@prefix kbss-module: <http://onto.fel.cvut.cz/ontologies/lib/module/> .
@prefix km-rdf4j: <http://onto.fel.cvut.cz/ontologies/lib/module/rdf4j/> .
@prefix km-sesame: <http://onto.fel.cvut.cz/ontologies/lib/module/sesame/> .
@prefix km-tabular: <http://onto.fel.cvut.cz/ontologies/lib/module/tabular/> .
@prefix km-terms: <http://onto.fel.cvut.cz/ontologies/lib/module/extract-term-occurrences/> .
@prefix km-text-analysis: <http://onto.fel.cvut.cz/ontologies/lib/module/text-analysis/> .
@prefix ms: <http://onto.fel.cvut.cz/ontologies/maintenance-schema/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix ufo: <http://onto.fel.cvut.cz/ontologies/ufo/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix vs-m: <http://vfn.cz/ontologies/ava-study/model/> .
@prefix rel:  <http://onto.fel.cvut.cz/ontologies/reliability/> .
@prefix termit: <http://onto.fel.cvut.cz/ontologies/application/termit/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix a-popis-dat: <http://onto.fel.cvut.cz/ontologies/slovník/agendový/popis-dat/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix a-popis-dat-pojem: <http://onto.fel.cvut.cz/ontologies/slovník/agendový/popis-dat/pojem/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix termit-pojem: <http://onto.fel.cvut.cz/ontologies/application/termit/pojem/> .
@prefix rit:  <http://onto.fel.cvut.cz/ontology/ECCAIRS5_dataBridge.xsd#> .
@prefix mbsa: <http://fd.cvut.cz/chopamax/mbsa/aida> .

<http://onto.fel.cvut.cz/ontologies/ava/import-vocabulary-0.1>
  a owl:Ontology ;
  owl:imports <http://onto.fel.cvut.cz/ontologies/s-pipes-lib> ;
.

:import-input-ontology
  a sml:ImportRDFFromWorkspace ;
  sml:baseURI "http://fd.cvut.cz/chopamax/mbsa/aida" ;
  sm:next :construct-vocabulary ;
  sml:ignoreImports true ;
.

:bind-output-vocabulary-iri
  a sml:BindWithConstant ;
  sm:next :construct-vocabulary ;
  sm:outputVariable "outputVocabularyIri" ;
  sml:value <http://fd.cvut.cz/chopamax/mbsa/aida> ;
.

:construct-vocabulary
  a sml:ApplyConstruct ;
  sm:next :transform-vocabulary_Return ;
  sm:next :prepare-deployable-vocabulary ;
  sml:replace true ;
  sml:constructQuery [
      a sp:Construct ;
      sp:text """# 1 - construct vocabulary
CONSTRUCT {
  ?modelIri a a-popis-dat-pojem:model .
  ?glosarIri a a-popis-dat-pojem:glosář .
  ?documentIri a a-popis-dat-pojem:dokument;
    dcterms:title "Dokument pro Reliablity"@cs .

  ?outputVocabularyIri
    a a-popis-dat-pojem:slovník ;
    a a-popis-dat-pojem:dokumentový-slovník ;
    a-popis-dat-pojem:má-glosář ?glosarIri ;
    a-popis-dat-pojem:popisuje-dokument ?documentIri ;
    a-popis-dat-pojem:má-model ?modelIri ;
    dcterms:description "Max vocabulary for AIDA."@cs;
    dcterms:title "MBSA"@cs;
  .

  # ?outputVocabularyIri termit-pojem:má-seznam-řízení-přístupu <http://onto.fel.cvut.cz/ontologies/application/termit/pojem/seznam-řízení-přístupu/instance1529313839> .
} WHERE {

  BIND(iri(concat(str(?outputVocabularyIri), "/model")) as ?modelIri)
  BIND(iri(concat(str(?outputVocabularyIri), "/glosar")) as ?glosarIri)
  BIND(iri(concat(str(?outputVocabularyIri), "/document")) as ?documentIri)
}""" ;
    ] ;
  sml:constructQuery [
      a sp:Construct ;
      sp:text """# 1 - construct terms
CONSTRUCT {
  ?glosarIri skos:hasTopConcept ?term .

  ?term
    a skos:Concept ;
    skos:inScheme ?glosarIri ;
    skos:prefLabel ?termLabelEn ;
    skos:prefLabel ?termLabelCs ;
    a-popis-dat-pojem:má-stav-pojmu termit-pojem:navrhovaný-pojem ;
    # If you want to keep the nature, you can do it here:
    mbsa:nature ?nature .
}
WHERE {
  ?term a owl:Class ;
        rdfs:label ?label ;
        mbsa:nature ?nature .

  OPTIONAL { ?term mbsa:nature ?nature }


  BIND( STRLANG(?label, "en") AS ?termLabelEn )
  BIND( STRLANG(?label, "cs") AS ?termLabelCs )

  BIND( iri(concat(str(?outputVocabularyIri), "/glosar")) AS ?glosarIri )
}""" ;
    ] ;
.



:transform-vocabulary_Return
  a sml:ReturnRDF ;
  sml:serialization sml:Turtle ;
.

:transform-vocabulary
  a sm:Function ;
  sm:returnModule :transform-vocabulary_Return ;
  rdfs:subClassOf sm:Functions ;
.


:prepare-deployable-vocabulary
  a sml:ApplyConstruct ;
  sm:next :deploy-to-termit-repository ;
  sml:constructQuery [
      a sp:Construct ;
      sp:text """# add context to provided inspections
CONSTRUCT {
    _:statement rdf:type rdf:Statement ;
              rdf:subject ?s ;
              rdf:predicate ?p ;
              rdf:object ?o ;
              kbss-module:is-part-of-graph ?outputVocabularyIri .
} WHERE {
    ?s ?p ?o .
}""" ;
    ] ;
  sml:replace true ;
.


:bind-termit-rdf4j-server
  a sml:BindWithConstant ;
  sm:next :deploy-to-termit-repository ;
  sm:outputVariable "termitRdf4jServer" ;
  sml:value "https://graphdb.onto.fel.cvut.cz" ;
.

:bind-termit-repository-name
  a sml:BindWithConstant ;
  sm:next :deploy-to-termit-repository ;
  sm:outputVariable "termitRepositoryName" ;
  sml:value "termit-dev" ;
.

:deploy-to-termit-repository
  a kbss-module:deploy ;
  sm:next :deploy-vocabulary_Return ;
  km-rdf4j:p-rdf4j-server-url [
      sp:varName "termitRdf4jServer" ;
    ] ;
  km-rdf4j:p-rdf4j-repository-name [
      sp:varName "termitRepositoryName" ;
    ] ;
  km-rdf4j:p-rdf4j-secured-username-variable "termitRepositoryUsername" ;
  km-rdf4j:p-rdf4j-secured-password-variable "termitRepositoryPassword" ; 
  km-rdf4j:p-rdf4j-infer-context-iris true ;
  km-rdf4j:p-is-replace true ;
.

:deploy-vocabulary_Return
  a sml:ReturnRDF ;
  sml:serialization sml:Turtle ;
.

:deploy-vocabulary
  a sm:Function ;
  sm:returnModule :deploy-vocabulary_Return ;
  rdfs:subClassOf sm:Functions ;
.
